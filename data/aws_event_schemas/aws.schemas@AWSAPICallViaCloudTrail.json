{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "AWSAPICallViaCloudTrail"
  },
  "paths": {},
  "components": {
    "schemas": {
      "AWSEvent": {
        "type": "object",
        "required": [
          "detail-type",
          "resources",
          "id",
          "source",
          "time",
          "detail",
          "region",
          "version",
          "account"
        ],
        "x-amazon-events-detail-type": "AWS API Call via CloudTrail",
        "x-amazon-events-source": "aws.schemas",
        "properties": {
          "detail": {
            "$ref": "#/components/schemas/AWSAPICallViaCloudTrail"
          },
          "detail-type": {
            "type": "string"
          },
          "resources": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "region": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "account": {
            "type": "string"
          }
        }
      },
      "AWSAPICallViaCloudTrail": {
        "type": "object",
        "required": [
          "eventID",
          "awsRegion",
          "eventVersion",
          "responseElements",
          "sourceIPAddress",
          "eventSource",
          "requestParameters",
          "userAgent",
          "userIdentity",
          "eventType",
          "requestID",
          "eventTime",
          "eventName"
        ],
        "properties": {
          "responseElements": {
            "type": "object"
          },
          "requestParameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CreateDiscovererRequestParameters"
              },
              {
                "$ref": "#/components/schemas/CreateRegistryRequestParameters"
              },
              {
                "$ref": "#/components/schemas/CreateSchemaRequestParameters"
              },
              {
                "$ref": "#/components/schemas/DeleteDiscovererRequestParameters"
              },
              {
                "$ref": "#/components/schemas/DeleteRegistryRequestParameters"
              },
              {
                "$ref": "#/components/schemas/DeleteResourcePolicyRequestParameters"
              },
              {
                "$ref": "#/components/schemas/DeleteSchemaRequestParameters"
              },
              {
                "$ref": "#/components/schemas/DeleteSchemaVersionRequestParameters"
              },
              {
                "$ref": "#/components/schemas/DescribeCodeBindingRequestParameters"
              },
              {
                "$ref": "#/components/schemas/DescribeDiscovererRequestParameters"
              },
              {
                "$ref": "#/components/schemas/DescribeRegistryRequestParameters"
              },
              {
                "$ref": "#/components/schemas/DescribeSchemaRequestParameters"
              },
              {
                "$ref": "#/components/schemas/ExportSchemaRequestParameters"
              },
              {
                "$ref": "#/components/schemas/GetCodeBindingSourceRequestParameters"
              },
              {
                "$ref": "#/components/schemas/GetDiscoveredSchemaRequestParameters"
              },
              {
                "$ref": "#/components/schemas/GetResourcePolicyRequestParameters"
              },
              {
                "$ref": "#/components/schemas/ListDiscoverersRequestParameters"
              },
              {
                "$ref": "#/components/schemas/ListRegistriesRequestParameters"
              },
              {
                "$ref": "#/components/schemas/ListSchemasRequestParameters"
              },
              {
                "$ref": "#/components/schemas/ListSchemaVersionRequestParameters"
              },
              {
                "$ref": "#/components/schemas/ListTagsForResourceRequestParameters"
              },
              {
                "$ref": "#/components/schemas/PutCodeBindingRequestParameters"
              },
              {
                "$ref": "#/components/schemas/PutResourcePolicyRequestParameters"
              },
              {
                "$ref": "#/components/schemas/SearchSchemasRequestParameters"
              },
              {
                "$ref": "#/components/schemas/StartDiscovererRequestParameters"
              },
              {
                "$ref": "#/components/schemas/StopDiscovererRequestParameters"
              },
              {
                "$ref": "#/components/schemas/TagResourceRequestParameters"
              },
              {
                "$ref": "#/components/schemas/UntagResourceRequestParameters"
              },
              {
                "$ref": "#/components/schemas/UpdateDiscovererRequestParameters"
              },
              {
                "$ref": "#/components/schemas/UpdateRegistryRequestParameters"
              },
              {
                "$ref": "#/components/schemas/UpdateSchemaRequestParameters"
              }
            ]
          },
          "userIdentity": {
            "$ref": "#/components/schemas/UserIdentity"
          },
          "eventID": {
            "type": "string"
          },
          "awsRegion": {
            "type": "string"
          },
          "eventVersion": {
            "type": "string"
          },
          "sourceIPAddress": {
            "type": "string"
          },
          "eventSource": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "userAgent": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "requestID": {
            "type": "string"
          },
          "eventTime": {
            "type": "string",
            "format": "date-time"
          },
          "eventName": {
            "type": "string"
          }
        }
      },
      "UserIdentity": {
        "type": "object",
        "required": [
          "accessKeyId",
          "accountId",
          "principalId",
          "type",
          "arn"
        ],
        "properties": {
          "accessKeyId": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "principalId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "arn": {
            "type": "string"
          }
        }
      },
      "CreateRegistryRequestParameters": {
        "nullable": true,
        "required": [
          "registryName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "Description": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "DescribeRegistryRequestParameters": {
        "nullable": true,
        "required": [
          "registryName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          }
        }
      },
      "DeleteRegistryRequestParameters": {
        "nullable": true,
        "required": [
          "registryName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          }
        }
      },
      "ListRegistriesRequestParameters": {
        "nullable": true,
        "type": "object",
        "properties": {
          "scope": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "nextToken": {
            "type": "string"
          },
          "registryNamePrefix": {
            "type": "string"
          }
        }
      },
      "UpdateRegistryRequestParameters": {
        "nullable": true,
        "required": [
          "registryName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "Description": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ListSchemaVersionRequestParameters": {
        "nullable": true,
        "required": [
          "registryName",
          "schemaName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "nextToken": {
            "type": "string"
          },
          "schemaName": {
            "type": "string"
          }
        }
      },
      "DeleteSchemaVersionRequestParameters": {
        "nullable": true,
        "required": [
          "registryName",
          "schemaName",
          "schemaVersion"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "schemaName": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "string"
          }
        }
      },
      "GetCodeBindingSourceRequestParameters": {
        "nullable": true,
        "required": [
          "registryName",
          "schemaName",
          "language"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "schemaName": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "DescribeCodeBindingRequestParameters": {
        "nullable": true,
        "required": [
          "registryName",
          "schemaName",
          "language"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "schemaName": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "string"
          }
        }
      },
      "PutCodeBindingRequestParameters": {
        "nullable": true,
        "required": [
          "registryName",
          "schemaName",
          "language"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "schemaName": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "string"
          }
        }
      },
      "ListSchemasRequestParameters": {
        "nullable": true,
        "required": [
          "registryName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "nextToken": {
            "type": "string"
          },
          "schemaNamePrefix": {
            "type": "string"
          }
        }
      },
      "SearchSchemasRequestParameters": {
        "nullable": true,
        "required": [
          "registryName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "nextToken": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          }
        }
      },
      "ExportSchemaRequestParameters": {
        "nullable": true,
        "required": [
          "registryName",
          "schemaName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "schemaName": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "DescribeSchemaRequestParameters": {
        "nullable": true,
        "required": [
          "registryName",
          "schemaName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "schemaName": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "string"
          }
        }
      },
      "CreateSchemaRequestParameters": {
        "nullable": true,
        "required": [
          "Content",
          "Type",
          "registryName",
          "schemaName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "schemaName": {
            "type": "string"
          },
          "Type": {
            "$ref": "#/components/schemas/Type"
          },
          "Description": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "Content": {
            "maxLength": 100000,
            "minLength": 1,
            "type": "string"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "UpdateSchemaRequestParameters": {
        "nullable": true,
        "required": [
          "registryName",
          "schemaName"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/Type"
          },
          "registryName": {
            "type": "string"
          },
          "schemaName": {
            "type": "string"
          },
          "Description": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "ClientTokenId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string"
          },
          "Content": {
            "maxLength": 100000,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "DeleteSchemaRequestParameters": {
        "nullable": true,
        "required": [
          "registryName",
          "schemaName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "schemaName": {
            "type": "string"
          }
        }
      },
      "ListDiscoverersRequestParameters": {
        "nullable": true,
        "type": "object",
        "properties": {
          "sourceArnPrefix": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "nextToken": {
            "type": "string"
          },
          "discovererIdPrefix": {
            "type": "string"
          }
        }
      },
      "StopDiscovererRequestParameters": {
        "nullable": true,
        "required": [
          "discovererId"
        ],
        "type": "object",
        "properties": {
          "discovererId": {
            "type": "string"
          }
        }
      },
      "StartDiscovererRequestParameters": {
        "nullable": true,
        "required": [
          "discovererId"
        ],
        "type": "object",
        "properties": {
          "discovererId": {
            "type": "string"
          }
        }
      },
      "DeleteDiscovererRequestParameters": {
        "nullable": true,
        "required": [
          "discovererId"
        ],
        "type": "object",
        "properties": {
          "discovererId": {
            "type": "string"
          }
        }
      },
      "DescribeDiscovererRequestParameters": {
        "nullable": true,
        "required": [
          "discovererId"
        ],
        "type": "object",
        "properties": {
          "discovererId": {
            "type": "string"
          }
        }
      },
      "CreateDiscovererRequestParameters": {
        "nullable": true,
        "required": [
          "SourceArn"
        ],
        "type": "object",
        "properties": {
          "CrossAccount": {
            "type": "boolean"
          },
          "Description": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "SourceArn": {
            "maxLength": 1600,
            "minLength": 20,
            "type": "string"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "GetDiscoveredSchemaVersionItemInput": {
        "maxLength": 100000,
        "minLength": 1,
        "type": "string"
      },
      "ListTagsForResourceRequestParameters": {
        "nullable": true,
        "required": [
          "resource-arn"
        ],
        "type": "object",
        "properties": {
          "resource-arn": {
            "type": "string"
          }
        }
      },
      "TagResourceRequestParameters": {
        "nullable": true,
        "required": [
          "tags",
          "resource-arn"
        ],
        "type": "object",
        "properties": {
          "resource-arn": {
            "type": "string"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "UntagResourceRequestParameters": {
        "nullable": true,
        "required": [
          "tagKeys",
          "resource-arn"
        ],
        "type": "object",
        "properties": {
          "resource-arn": {
            "type": "string"
          },
          "tagKeys": {
            "type": "string"
          }
        }
      },
      "GetResourcePolicyRequestParameters": {
        "nullable": true,
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          }
        }
      },
      "PutResourcePolicyRequestParameters": {
        "nullable": true,
        "required": [
          "Policy",
          "registryName"
        ],
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          },
          "Policy": {
            "type": "string",
            "description": "<para>The resource-based policy.</para>"
          },
          "RevisionId": {
            "type": "string",
            "description": "<para>The revision ID of the policy.</para>"
          }
        },
        "description": "<para>Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.</para>"
      },
      "DeleteResourcePolicyRequestParameters": {
        "nullable": true,
        "type": "object",
        "properties": {
          "registryName": {
            "type": "string"
          }
        }
      },
      "Tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "<para>Key-value pairs associated with a resource.</para>"
      },
      "Type": {
        "type": "string",
        "enum": [
          "OpenApi3",
          "JSONSchemaDraft4"
        ]
      },
      "UpdateDiscovererRequestParameters": {
        "nullable": true,
        "required": [
          "registryName"
        ],
        "type": "object",
        "properties": {
          "discovererId": {
            "type": "string"
          },
          "CrossAccount": {
            "type": "boolean"
          },
          "Description": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "GetDiscoveredSchemaRequestParameters": {
        "nullable": true,
        "required": [
          "Events",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/Type"
          },
          "Events": {
            "maxItems": 10,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDiscoveredSchemaVersionItemInput"
            }
          }
        }
      }
    }
  }
}
